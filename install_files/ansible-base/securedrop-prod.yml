---
- hosts: [ 'mon', 'app' ]

  vars_files:
    - group_vars/securedrop.yml
    - prod-specific.yml

  roles:
    - common

  sudo: yes


- hosts: [ 'mon' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/mon.yml
    - prod-specific.yml

  roles:
    - validate
    - common-mon
    - ossec_server

  sudo: yes

- hosts: [ 'app' ]

  vars_files:
   - group_vars/securedrop.yml
   - host_vars/app.yml
   - prod-specific.yml

  vars:

  roles:
    - validate
    - common-app
    - ossec_agent
    - app

  sudo: yes


  # If the OSSEC authd iptable rule exemptions are in place remove them and
  # restart OSSEC. For the ossec agent the exemptions are removes as part of
  # the authd role. In order to allow all agents to connect to the ossec server
  # before kill authd and removing the ossec rules. This is a separate role for
  # the ossec server. The order of events does matter the monitor server authd
  # service needs to be listening and reachable, then agent needs to connect to
  # ossec server, agent needs to restart, then ossec server exemptions can be
  # removed and the ossec server process can restart.
- hosts: [ 'mon' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/mon.yml
    - prod-specific.yml

  roles:
    - remove_authd_exemptions

  sudo: yes

  # This section will put the ssh and iptables rules in place
  # It will then add any staging exemptions required
  # at the end of each host section is when the handlers are run.
  # So iptables will not be reloaded until the exemptions are applied
  # for production the last task is apply iptables. This will break their
  # connection. After that point the admin will to proxy traffic over tor.
- hosts: [ 'app' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/app.yml
    - prod-specific.yml

  roles:
    - restrict_direct_access_mon

  sudo: yes

- hosts: [ 'mon' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/mon.yml
    - prod-specific.yml

  roles:
    - restrict_direct_access_app

  sudo: yes
