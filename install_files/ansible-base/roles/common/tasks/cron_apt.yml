---
- name: install cron-apt to handle unattended security upgrades
  apt: name=cron-apt state=latest

- name: ensure custom cron-apt config file is present
  copy: src=cron-apt-config dest=/etc/cron-apt/config

- name: ensure security.list file exists
  template:
    src: security.list
    dest: /etc/apt/security.list

- name: ensure cron-apt updates the security.list packages
  copy: src=0-update dest=/etc/cron-apt/action.d/0-update

- name: ensure cron-apt upgrades the secruity.list packages
  copy: src=5-security dest=/etc/cron-apt/action.d/5-security

  # The default config file would download all security update every night
  # regardless if they were a security update. we only need it download and
  # install the security updates.
- name: ensure default cron-apt file to download all updates does not exist
  file: dest=/etc/cron-apt/action.d/3-download state=absent

- name: ensure the cron.d config for cron-apt exists
  copy: src=cron-apt dest=/etc/cron.d/cron-apt mode=644 owner=root

- name: perform safe upgrade to ensure all the packages are updated
  apt: upgrade=safe

- stat: path=/var/run/reboot-required
  register: reboot_required

- name: reboot if required due to security updates
  command: reboot
  when: reboot_required.stat.exists

- name: waiting for server to come back
  local_action:
    module: wait_for
      host={{ ansible_ssh_host }}
      port={{ ansible_ssh_port }}
      delay=20
      state=started
  when: reboot_required.stat.exists
  sudo: false
