---

- name: ensure /var/www/html/ is removed
  file:
    state: absent
    dest: "/var/www/html"

- name: ensure securedrop root directory exists
  file:
    state: directory
    mode: 0700
    owner: www-data
    group: www-data
    dest: "{{ securedrop_root }}"

- name: ensure securedrop data directory exists 
  file:
    state: directory
    mode: 0700
    owner: www-data
    group: www-data
    dest: "{{ securedrop_data }}"

- name: ensure securedrop data store directory exists
  file:
    state: directory
    mode: 0700
    owner: www-data
    group: www-data
    dest: "{{ securedrop_data }}/store"

- name: ensure securedrop keyring directory exists
  file:
    state: directory
    mode: 0700
    owner: www-data
    group: www-data
    dest: "{{ securedrop_keyring }}"

- name: ensure secureDrop app dependency packages are installed
  apt: pkg="{{ item }}" state=latest
  with_items: app_deps

- name: import app gpg public key
  command: "su -s /bin/bash -c \"gpg --homedir {{ securedrop_keyring }} --import {{ securedrop_app_gpg_public_key_path }}\" {{ apache_user }}"

- name: generating 32 byte value for "source secret key"
  shell: "head -c 32 /dev/urandom | base64"
  register: source_secret_key

- name: generating 32 byte value for "journalist secret key"
  shell: "head -c 32 /dev/urandom | base64"
  register: journalist_secret_key

- name: generating 32 byte value for "scrypt id pepper"
  shell: "head -c 32 /dev/urandom | base64"
  register: scrypt_id_pepper

- name: generating 32 byte value for "scrypt gpg pepper"
  shell: "head -c 32 /dev/urandom | base64"
  register: scrypt_gpg_pepper

- name: ensure templatized config.py is installed
  template: src="config.py" dest="{{ securedrop_root }}/config.py"
    owner="{{ apache_user }}"
    group="{{ apache_user }}"
    mode=0600

# XXX - Make this idempotent!
- name: initialize sqlite db
  shell: "su -s /bin/bash -c \"PYTHONPATH={{ securedrop_root }} python -c 'import db; db.init_db()'\" {{ apache_user }}"

